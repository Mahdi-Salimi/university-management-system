# Generated by Django 5.0.2 on 2024-05-26 10:56

import django.db.models.deletion
import utils.models.choices
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('faculty', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('MON', 'Monday'), ('TUE', 'Tuesday'), ('WED', 'Wednesday'), ('THU', 'Thursday'), ('FRI', 'Friday'), ('SAT', 'Saturday'), ('SUN', 'Sunday')], max_length=3)),
                ('time_block', models.CharField(choices=[('7_9', '7:00 - 9:00'), ('9_11', '9:00 -11:00'), ('11_13', '11:00 -13:00'), ('13_15', '13:00 -15:00'), ('15_17', '15:00 -17:00'), ('17_19', '17:00 -19:00')], max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='CourseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_type', models.CharField(choices=[('G', 'General'), ('S', 'Specialized'), ('O', 'Optional'), ('B', 'Basic')], default='G', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.IntegerField()),
                ('academic_semester', models.CharField(choices=[('1', 'Autumn'), ('2', 'Winter'), ('3', 'Summer')], default='1', max_length=1)),
                ('start_course_registration', models.DateTimeField()),
                ('end_course_registration', models.DateTimeField()),
                ('start_class_date', models.DateTimeField()),
                ('end_class_date', models.DateTimeField()),
                ('start_course_modification', models.DateTimeField()),
                ('end_course_modification', models.DateTimeField()),
                ('end_emergency_modification', models.DateTimeField()),
                ('start_exam_date', models.DateTimeField()),
                ('end_semester_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='SemesterCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_date_time', models.DateTimeField()),
                ('exam_place', models.CharField(max_length=30)),
                ('course_capacity', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='StudentCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_status', models.CharField(choices=[('N', 'Withdrawn in Emenrgency'), ('S', 'Studying'), ('F', 'Failed Student Course'), ('P', 'Passed Student Course')], default='N', max_length=1)),
                ('student_grade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[utils.models.choices.grade_validatior])),
            ],
        ),
        migrations.CreateModel(
            name='StudentSemester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gpa', models.FloatField()),
                ('semester_count', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField()),
                ('course_unit', models.IntegerField()),
                ('unit_type', models.CharField(choices=[('T', 'Theory'), ('P', 'Practical')], default='T', max_length=1)),
                ('corequisites', models.ManyToManyField(blank=True, related_name='corequisite_of', to='course.course')),
                ('faculty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='faculty.faculty')),
                ('prerequisites', models.ManyToManyField(blank=True, related_name='prerequisite_of', to='course.course')),
            ],
        ),
    ]
